apiVersion: v1
kind: Namespace
metadata:
  name: devops-test-rod
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.24.0 (7c629530)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
  namespace: devops-test-rod
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.24.0 (7c629530)
      creationTimestamp: null
      labels:
        io.kompose.network/tig-net: "true"
        io.kompose.service: grafana
    spec:
      containers:
      - image: grafana/grafana:5.0.0
        name: grafana
        ports:
        - containerPort: 3000
        resources: {}
      restartPolicy: Always
      volumes:
        - name: grafana-pvclaim
          persistentVolumeClaim:
            claimName: grafana-pvclaim
            readOnly: true
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.24.0 (7c629530)
  creationTimestamp: null
  labels:
    io.kompose.service: influxdb
  name: influxdb
  namespace: devops-test-rod
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: influxdb
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.24.0 (7c629530)
      creationTimestamp: null
      labels:
        io.kompose.network/tig-net: "true"
        io.kompose.service: influxdb
    spec:
      containers:
      - image: influxdb:1.4.3-alpine
        name: influxdb
        ports:
        - containerPort: 8086
        - containerPort: 8083
        resources: {}
        envFrom:
            - secretRef:
                name: influxdb-secrets
        env:
            - name: INFLUXDB_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: influxdb-secrets
                  key: INFLUXDB_ADMIN_PASSWORD
            - name: INFLUXDB_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: influxdb-secrets
                  key: INFLUXDB_ADMIN_USER
            - name: INFLUXDB_USER
              valueFrom:
                secretKeyRef:
                  name: influxdb-secrets
                  key: INFLUXDB_USER
            - name: INFLUXDB_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: influxdb-secrets
                  key: INFLUXDB_USER_PASSWORD
      hostname: influxdb
      restartPolicy: Always
      volumes:
        - name: influx-pvclaim
          persistentVolumeClaim:
            claimName: influx-pvclaim
            readOnly: true
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert
    kompose.version: 1.24.0 (7c629530)
  creationTimestamp: null
  labels:
    io.kompose.service: telegraf
  name: telegraf
  namespace: devops-test-rod
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: telegraf
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
          convert
        kompose.version: 1.24.0 (7c629530)
      creationTimestamp: null
      labels:
        io.kompose.network/tig-net: "true"
        io.kompose.service: telegraf
    spec:
      containers:
      - image: telegraf:1.5.2
        name: telegraf
        resources: {}
        volumeMounts:
        - mountPath: /etc/telegraf/telegraf.conf
          name: telegraf-config
          subPath: telegraf.conf
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: telegraf-config
        configMap:
          name: telegraf-config
status: {}